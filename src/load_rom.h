/*
Copyright 2025 समीर सिंह Sameer Singh

This file is part of nemesis.

nemesis is free software: you can redistribute it and/or modify it under the terms of the GNU
General Public License as published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

nemesis is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along with nemesis. If not, see
<https://www.gnu.org/licenses/>. */
#pragma once

#include <stddef.h>
#include <stdint.h>

#include "alloc.h"

// Assume that the ROM size cannot exceed 5MiB, and I am being generous here
static constexpr uint32_t MAX_ROM_SIZE = 5 * 1024 * 1024;

typedef enum {
  NAMETABLE_VERTICAL,
  NAMETABLE_HORIZONTAL,
  NAMETABLE_NONE
} hard_wired_nametable_layout_t;

typedef enum {
  CONSOLE_NES,
  CONSOLE_VS_SYSTEM,
  CONSOLE_PLAYCHOICE_10,
  CONSOLE_EXTENDED,
  CONSOLE_NONE
} console_type_t;

typedef enum {
  TIMING_NTSC,
  TIMING_PAL,
  TIMING_MULTIPLE,
  TIMING_DENDY,
  TIMING_NONE
} cpu_ppu_timing_t;

typedef enum {
  VS_PPU_ANY_RP2C03_OR_RC2C03,
  VS_PPU_RP2C04_0001 = 0x02,
  VS_PPU_RP2C04_0002,
  VS_PPU_RP2C04_0003,
  VS_PPU_RP2C04_0004,
  VS_PPU_RC2C05_01 = 0x08,
  VS_PPU_RC2C05_02,
  VS_PPU_RC2C05_03,
  VS_PPU_RC2C05_04,
  VS_PPU_NONE = 0x10
} vs_ppu_type_t;

typedef enum {
  VS_HARDWARE_UNISYSTEM_NORMAL,
  VS_HARDWARE_UNISYSTEM_RBI_BASEBALL,
  VS_HARDWARE_UNISYSTEM_TKO_BOXING,
  VS_HARDWARE_UNISYSTEM_SUPER_XEVIOUS,
  VS_HARDWARE_UNISYSTEM_VS_ICE_CLIMBER_JAPAN,
  VS_HARDWARE_DUAL_SYSTEM_NORMAL,
  VS_HARDWARE_DUAL_SYSTEM_RAID_ON_BUNGELING_BAY,
  VS_HARDWARE_NONE
} vs_hardware_type_t;

typedef enum {
  EXTENDED_CONSOLE_REGULAR_NES_FAMICOM_DENDY,
  EXTENDED_CONSOLE_VS_SYSTEM,
  EXTENDED_CONSOLE_PLAYCHOICE_10,
  EXTENDED_CONSOLE_REGULAR_FAMICLONE,
  EXTENDED_CONSOLE_REGULAR_NES_WITH_EPSM,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT01,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT02,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT03,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT09,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT32,
  EXTENDED_CONSOLE_VR_TECHNOLOGY_VT369,
  EXTENDED_CONSOLE_UMC_UM6578,
  EXTENDED_CONSOLE_FAMICOM_NETWORK_SYSTEM,
  EXTENDED_CONSOLE_NONE = 0x10
} extended_console_type_t;

typedef enum {
  DEFAULT_EXPANSION_DEVICE_UNSPECIFIED,
  DEFAULT_EXPANSION_DEVICE_STANDARD_NES_CONTROLLERS,
  DEFAULT_EXPANSION_DEVICE_NES_FOUR_SCORE_SATELLITE,
  DEFAULT_EXPANSION_DEVICE_FAMICOM_FOUR_PLAYERS_ADAPTER,
  DEFAULT_EXPANSION_DEVICE_VS_SYSTEM_1P_VIA_4016,
  DEFAULT_EXPANSION_DEVICE_VS_SYSTEM_1P_VIA_4017,
  DEFAULT_EXPANSION_DEVICE_RESERVED,
  DEFAULT_EXPANSION_DEVICE_VS_ZAPPER,
  DEFAULT_EXPANSION_DEVICE_ZAPPER_4017,
  DEFAULT_EXPANSION_DEVICE_TWO_ZAPPERS,
  DEFAULT_EXPANSION_DEVICE_BANDAI_HYPER_SHOT_LIGHTGUN,
  DEFAULT_EXPANSION_DEVICE_POWER_PAD_SIDE_A,
  DEFAULT_EXPANSION_DEVICE_POWER_PAD_SIDE_B,
  DEFAULT_EXPANSION_DEVICE_FAMILY_TRAINER_SIDE_A,
  DEFAULT_EXPANSION_DEVICE_FAMILY_TRAINER_SIDE_B,
  DEFAULT_EXPANSION_DEVICE_ARKANOID_VAUS_CONTROLLER_NES,
  DEFAULT_EXPANSION_DEVICE_ARKANOID_VAUS_CONTROLLER_FAMICOM,
  DEFAULT_EXPANSION_DEVICE_TWO_VAUS_CONTROLLERS,
  DEFAULT_EXPANSION_DEVICE_KONAMI_HYPER_SHOT_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_COCONUTS_PACHINKO_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_EXCITING_BOXING_PUNCHING_BAG,
  DEFAULT_EXPANSION_DEVICE_JISSEN_MAHJONG_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_PARTY_TAP,
  DEFAULT_EXPANSION_DEVICE_OEKA_KIDS_TABLET,
  DEFAULT_EXPANSION_DEVICE_SUNSOFT_BARCODE_BATTLER,
  DEFAULT_EXPANSION_DEVICE_MIRACLE_PIANO_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_POKKUN_MOGURAA,
  DEFAULT_EXPANSION_DEVICE_TOP_RIDER,
  DEFAULT_EXPANSION_DEVICE_DOUBLE_FISTED,
  DEFAULT_EXPANSION_DEVICE_FAMICOM_3D_SYSTEM,
  DEFAULT_EXPANSION_DEVICE_DOREMIKKO_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_ROB_GYRO_SET,
  DEFAULT_EXPANSION_DEVICE_FAMICOM_DATA_RECORDER,
  DEFAULT_EXPANSION_DEVICE_ASCII_TURBO_FILE,
  DEFAULT_EXPANSION_DEVICE_IGS_STORAGE_BATTLE_BOX,
  DEFAULT_EXPANSION_DEVICE_FAMILY_BASIC_KEYBOARD_PLUS_FAMICOM_DATA_RECORDER,
  DEFAULT_EXPANSION_DEVICE_DONGDA_PEC_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_PUZE_BIT_79_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD_PLUS_MOUSE_3X8_BIT_PROTOCOL,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD_PLUS_MOUSE_24_BIT_PROTOCOL_VIA_4016,
  DEFAULT_EXPANSION_DEVICE_SNES_MOUSE_4016_D0,
  DEFAULT_EXPANSION_DEVICE_MULTICART,
  DEFAULT_EXPANSION_DEVICE_TWO_SNES_CONTROLLERS,
  DEFAULT_EXPANSION_DEVICE_RACERMATE_BICYCLE,
  DEFAULT_EXPANSION_DEVICE_UFORCE,
  DEFAULT_EXPANSION_DEVICE_ROB_STACK_UP,
  DEFAULT_EXPANSION_DEVICE_CITY_PATROLMAN_LIGHTGUN,
  DEFAULT_EXPANSION_DEVICE_SHARP_C1_CASSETTE_INTERFACE,
  DEFAULT_EXPANSION_DEVICE_STANDARD_CONTROLLER_WITH_SWAP,
  DEFAULT_EXPANSION_DEVICE_EXCALIBUR_SUDOKU_PAD,
  DEFAULT_EXPANSION_DEVICE_ABL_PINBALL,
  DEFAULT_EXPANSION_DEVICE_GOLDEN_NUGGET_CASINO_EXTRA_BUTTONS,
  DEFAULT_EXPANSION_DEVICE_KEDA_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD_PLUS_MOUSE_24_BIT_PROTOCOL_VIA_4017,
  DEFAULT_EXPANSION_DEVICE_PORT_TEST_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_BANDAI_MULTI_GAME_PLAYER_GAMEPAD_BUTTONS,
  DEFAULT_EXPANSION_DEVICE_VENOM_TV_DANCE_MAT,
  DEFAULT_EXPANSION_DEVICE_LG_TV_REMOTE_CONTROL,
  DEFAULT_EXPANSION_DEVICE_FAMICOM_NETWORK_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_KING_FISHING_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_CROAKY_KARAOKE_CONTROLLER,
  DEFAULT_EXPANSION_DEVICE_KEWANG_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_ZECHENG_KEYBOARD,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD_PLUS_ROTATED_PS2_MOUSE_IN_4017,
  DEFAULT_EXPANSION_DEVICE_PS2_KEYBOARD_IN_UM6578_PS2_PORT_VIA_4017,
  DEFAULT_EXPANSION_DEVICE_PS2_MOUSE_IN_UM6578_PS2_PORT,
  DEFAULT_EXPANSION_DEVICE_YUXING_MOUSE_VIA_4016,
  DEFAULT_EXPANSION_DEVICE_XIAOBAWANG_KEYBOARD_PLUS_YUXING_MOUSE_IN_4016,
  DEFAULT_EXPANSION_DEVICE_GIGGGLE_TV_PUMP,
  DEFAULT_EXPANSION_DEVICE_BUBUGAO_KEYBOARD_PLUS_ROTATED_PS2_MOUSE_IN_4017,
  DEFAULT_EXPANSION_DEVICE_MAGICAL_COOKING,
  DEFAULT_EXPANSION_DEVICE_SNES_MOUSE_4017_D0,
  DEFAULT_EXPANSION_DEVICE_ZAPPER_4016,
  DEFAULT_EXPANSION_DEVICE_ARKANOID_VAUS_CONTROLLER_PROTOTYPE
} default_expansion_device_t;

typedef enum { TV_SYSTEM_NTSC, TV_SYSTEM_PAL, TV_SYSTEM_NONE } tv_system_t;

// TODO: support more formats
typedef enum { FORMAT_TYPE_INES, FORMAT_TYPE_INES2, FORMAT_TYPE_NONE } format_type_t;

typedef struct {
  bool trainer_area_exists;
  bool battery_present;
  size_t prg_rom_size;
  size_t chr_rom_size;
  uint16_t mapper_number;
  uint8_t submapper_number;
  hard_wired_nametable_layout_t hard_wired_nametable_layout;
  bool alternative_nametables;
  console_type_t console_type;
  uint32_t prg_ram_size;
  uint32_t prg_nvram_size;
  uint32_t chr_ram_size;
  uint32_t chr_nvram_size;
  cpu_ppu_timing_t cpu_ppu_timing;
  vs_ppu_type_t vs_ppu_type;
  vs_hardware_type_t vs_hardware_type;
  extended_console_type_t extended_console_type;
  uint8_t misc_rom_number;
  ptrdiff_t misc_rom_area_size;
  default_expansion_device_t default_expansion_device;
} ines2_header_t;

typedef struct {
  bool trainer_area_exists;
  bool battery_present;
  bool chr_ram_exists;
  size_t prg_rom_size;
  size_t chr_rom_size;
  hard_wired_nametable_layout_t hard_wired_nametable_layout;
  bool alternative_nametables;
  uint8_t mapper_number;
  console_type_t console_type;
  uint32_t prg_ram_size;
  tv_system_t tv_system;
} ines_header_t;

typedef struct {
  format_type_t format_type;
  uint8_t *rom_data;
  size_t rom_size;
  ines_header_t ines_header;
  ines2_header_t ines2_header;
} cartridge_t;

cartridge_t cart_new(void);
[[nodiscard]] bool load_rom_file(arena_t *arena, cartridge_t *cart, const char *file_path);
[[nodiscard]] bool fill_header(cartridge_t *cart);
